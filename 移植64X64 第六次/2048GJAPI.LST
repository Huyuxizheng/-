C51 COMPILER V9.54   2048GJAPI                                                             12/22/2017 14:02:55 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE 2048GJAPI
OBJECT MODULE PLACED IN 2048GJAPI.OBJ
COMPILER INVOKED BY: D:\K5\MAIN\C51\BIN\C51.EXE 2048GJAPI.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include"to2048moni.h"
   2          #include"2048SJK.h"
   3          
   4          //检测重叠图
   5          char _jiancechongdietujiance(uchar(*huanchong)[MAXH][MAXW / 8], char x, char y, uchar(*temp)[], char h, ch
             -ar w)
   6          {
   7   1        char i, chicun,
   8   1          xy, xs,
   9   1          ihs, ihy;
  10   1        //开始绘制
  11   1        chicun = (h*w);
  12   1        xy = (x >= 0 ? (x % 8) : 8 + (x % 8));
  13   1        xs = (x >= 0 ? (x / 8) : (x / 8 - 1));
  14   1        for (i = 0; i < chicun; i++)
  15   1        {
  16   2          ihy = (i % h);
  17   2          if ((y + ihy) >= 0 && (y + ihy) < MAXH)
  18   2          {
  19   3            ihs = (i / h);
  20   3      
  21   3            if ((xs + ihs) >= 0 && (xs + ihs) < (MAXW / 8))
  22   3            {
  23   4              
  24   4              if (
  25   4                (char)(~(*huanchong)[y + ihy][xs + ihs])
  26   4                &
  27   4                (char)((*temp)[i] << xy)
  28   4                )
  29   4                return 1;
  30   4            }
  31   3      
  32   3            if ((xs + ihs + 1) >= 0 && (xs + ihs + 1) < (MAXW / 8))
  33   3            {
  34   4              if (
  35   4                (char)(~(*huanchong)[y + ihy][xs + ihs + 1])
  36   4                &
  37   4                (char)((*temp)[i] >> (8 - xy))
  38   4                )return 1;
  39   4            }
  40   3          }
  41   2        }
  42   1        return 0;
  43   1      }
  44          char jiancechongdietu(char x, char y, uchar(*temp)[], char h, char w, char yanse)
  45          {
  46   1        if (yanse == 2)
  47   1        {
  48   2          return (!_jiancechongdietujiance(&huanchonghong, x, y, temp, h, w))
*** WARNING C182 IN LINE 48 OF 2048GJAPI.c: pointer to different objects
  49   2            ||
  50   2            (!_jiancechongdietujiance(&huanchonglv, x, y, temp, h, w));
*** WARNING C182 IN LINE 50 OF 2048GJAPI.c: pointer to different objects
  51   2        }
  52   1        else if (yanse == 0)
C51 COMPILER V9.54   2048GJAPI                                                             12/22/2017 14:02:55 PAGE 2   

  53   1        {
  54   2          return _jiancechongdietujiance(&huanchonglv, x, y, temp, h, w);
*** WARNING C182 IN LINE 54 OF 2048GJAPI.c: pointer to different objects
  55   2        }
  56   1        else if (yanse == 1)
  57   1        {
  58   2          return _jiancechongdietujiance(&huanchonghong, x, y, temp, h, w);
*** WARNING C182 IN LINE 58 OF 2048GJAPI.c: pointer to different objects
  59   2        }
  60   1        else if (yanse == 3)
  61   1        {
  62   2          return _jiancechongdietujiance(&huanchonghong, x, y, temp, h, w) 
*** WARNING C182 IN LINE 62 OF 2048GJAPI.c: pointer to different objects
  63   2            || 
  64   2               _jiancechongdietujiance(&huanchonglv, x, y, temp, h, w);
*** WARNING C182 IN LINE 64 OF 2048GJAPI.c: pointer to different objects
  65   2        }
  66   1      
  67   1      
  68   1      }
  69          
  70          
  71          //检测重叠点
  72          char _jiancechongdiedianjiance(uchar(*huanchong)[MAXH][MAXW / 8], char x, char y)
  73          {
  74   1        if (y >= _huizhiquyu.n && y < _huizhiquyu.s && x >= _huizhiquyu.w && x < _huizhiquyu.e)
  75   1        {
  76   2          if ((char)(~(*huanchong)[y][x >> 3]) & (char)(1 << (x & 7)))
  77   2            return 1;
  78   2        }
  79   1        return 0;
  80   1      }
  81          char jiancechongdiedian(char x, char y, char yanse)
  82          {
  83   1        if (yanse == 2)
  84   1        {
  85   2          return (!_jiancechongdiedianjiance(&huanchonghong, x, y))
*** WARNING C182 IN LINE 85 OF 2048GJAPI.c: pointer to different objects
  86   2            ||
  87   2            (!_jiancechongdiedianjiance(&huanchonglv, x, y));
*** WARNING C182 IN LINE 87 OF 2048GJAPI.c: pointer to different objects
  88   2        }
  89   1        else if (yanse == 0)
  90   1        {
  91   2          return _jiancechongdiedianjiance(&huanchonglv, x, y);
*** WARNING C182 IN LINE 91 OF 2048GJAPI.c: pointer to different objects
  92   2        }
  93   1        else if (yanse == 1)
  94   1        {
  95   2          return _jiancechongdiedianjiance(&huanchonghong, x, y);
*** WARNING C182 IN LINE 95 OF 2048GJAPI.c: pointer to different objects
  96   2        }
  97   1        else if (yanse == 3)
  98   1        {
  99   2          return _jiancechongdiedianjiance(&huanchonghong, x, y)
*** WARNING C182 IN LINE 99 OF 2048GJAPI.c: pointer to different objects
 100   2            ||
 101   2            _jiancechongdiedianjiance(&huanchonglv, x, y);
*** WARNING C182 IN LINE 101 OF 2048GJAPI.c: pointer to different objects
 102   2        }
 103   1      
 104   1      }
C51 COMPILER V9.54   2048GJAPI                                                             12/22/2017 14:02:55 PAGE 3   

 105          
 106          
 107          //工具网格检测 输入限制 为提高效率XY必须在最大区域之内 
 108          uint gjwanggejiance(uchar x,uchar y,uchar wx,uchar hy)
 109          {
 110   1        x = (x / wx);
 111   1        y = (y / hy);
 112   1        return WGJC(x,y);
 113   1      }
 114          
 115          //工具矩形检测
 116          char gjjuxingjiance(char x, char y, char w, char n, char e, char s)
 117          {
 118   1        if (x >= w && y >= n && x <= e && y <= s)
 119   1          return 1;
 120   1        return 0;
 121   1      }
 122          
 123          //消息的默认处理方式以便程序整洁
 124          void morenchuli(uchar xiaoxi)
 125          {
 126   1        if(chaxunzhuangtaibiao(0))
 127   1        switch (xiaoxi)
 128   1        {
 129   2        case 1:
 130   2          gbjiaodian(&JDA_Z, 0, 1);
 131   2          break;
 132   2        case 2:
 133   2          gbjiaodian(&JDA_Z, -1, 0);
 134   2          break;
 135   2        case 3:
 136   2          gbjiaodian(&JDA_Z, 0, -1);
 137   2          break;
 138   2        case 4:
 139   2          gbjiaodian(&JDA_Z, 1, 0);
 140   2          break;
 141   2        }
 142   1      
 143   1      
 144   1      }
 145          
 146          
 147          uchar tuichu_123[] = { 0x11, 0x0A, 0x04, 0x0A, 0x11 };
 148          ANNIU tuichu = { 59, 59, 64, 64, tuichu_123, SE_CHENG, tuichu_123, SE_HONGTOU, tuichu_123, SE_HEI, 5, 1 ,1
             -};
 149          //退出按钮
 150          void tuichujian(uchar xiaoxi,char x,char y,uchar q)
 151          {
 152   1        kjanniu(&tuichu, xiaoxi, x, y);
 153   1        if (tuichu.xz == 3)
 154   1        {
 155   2          xiugaijiemian(q, J_Z);
 156   2        }
 157   1      }
 158          
 159          uchar logo2048_1[] =
 160          { 0xFE, 0x0C, 0xFF, 0xB0, 0xE0, 0x40, 0x0F, 0xC6, 0x1F, 0xC1, 0x40, 0xC0, 0x00, 0x5D, 0x55, 0xD5,
 161          0x14, 0x1D, 0x00, 0x5D, 0x55, 0x5D, 0x55, 0x9D, 0x00, 0x3A, 0x12, 0x12, 0x12, 0x39 };/*"LOGO",LOGO*/
 162          uchar logo2048_2[] =
 163          { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07 };/*"LOGO",LOGO*/
 164          //最下6行 2048 的LOGO
 165          void dalogo()
C51 COMPILER V9.54   2048GJAPI                                                             12/22/2017 14:02:55 PAGE 4   

 166          {
 167   1        shezhihuabiyanse(SE_LVTOU);
 168   1        huizhi(0, 58, logo2048_1, 6, 5);
*** WARNING C182 IN LINE 168 OF 2048GJAPI.c: pointer to different objects
 169   1        shezhihuabiyanse(SE_HONGTOU);
 170   1        huizhi(13, 58, logo2048_2, 1, 7);
*** WARNING C182 IN LINE 170 OF 2048GJAPI.c: pointer to different objects
 171   1      }
*** WARNING C291 IN LINE 68 OF 2048GJAPI.c: not every exit path returns a value
*** WARNING C291 IN LINE 104 OF 2048GJAPI.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1465    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     61      46
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  16 WARNING(S),  0 ERROR(S)
